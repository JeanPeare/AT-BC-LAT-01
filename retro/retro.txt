What we have done well?
- Listen attentive feedbacks
- Accomplishing requirements, we have completed our goals in a satisfactory way
- Fast integration of teams job
- Improved communication as a team after our last conversation by opening different communication channels, three teams meeting, sub-meeting and all teams meeting. As a consequence of this, we started delegating tasks better
- we "backup" each others, we try to support the others partners when they need
- we recognize and use people's strenghs and weaknesses which lead us to better and faster achievements
- most of the time we are solution foccused, not looking for the problem but how to solve it
- We focus in the project works as the user story needs
- With other teams we did a hight level design to place the classes each team will give
- TDD and SOLID
- Usually people are proactive
- Everyone always give good ideas related to the project
- We all had a good teamwork, everyone were always available to work with the others
- Main branch has been constantly stable (no unit test broken, no eslint issues)

What can we do better?
- Quality of results
- Better code practices
- More explaination between teams to be updated about the logic and functionality
- Review from all the teams in PRs
- everybody be more talkative, because usually it's just Rubiana or Samuel talking (kkkk)
- (personal) be more active on github - as we discussed today, about helping toimprove each other's code
- We can improve in our communication, the initial communication
- Sometimes we don't merge the PR when is approved, the time taken to do merge in the respective PR's,
  we should be actively reviewing our own PR's in order to merge them quickly and don't let them accumulate in github
- As a persistence's team we don't focus in implement the S.O.L.I.D. principles and design patterns.
- The reviewers don't review the PR faster.
- We can try to make our partners of the other parts of the project feel more accompanied.
- each team with a page
- daily meetings
- prioritizing tasks
- more investigation as the whole team for the use of technologies
- internals code review
- internals desmotration of the code
- Reviewers taking care of typos

Action items
- (team) In the general meetings, try to figure out the level of dependencies we have between different teams/people's code. Keep it simple, not necessarily have one section of the meeting to discuss about that, just consider as part of the discussion
- (team) Schedule necessary meetings on demand involving people that are concerned about the topic to be discussed
- (team) Have at least 1 team member of a subteam added to every PR created
- (PR authors) should check at the end of the day if PR was approved and merge. If not, ping reviewers
- (Reviewers) should try to review PRs where they were assigned as soon as possible
- (Jose) Follow up old PRs that still open, related to katas
- (team) Feel confident on asking questions to any team member of any subteam